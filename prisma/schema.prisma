// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  username String
  email    String    @unique
  password String
  createAt DateTime  @default(now())
  updateAt DateTime  @updatedAt
  Post     Post[]    @relation("user_post")
  Comment  Comment[] @relation("user_comment")
  Like     Like[]    @relation("user_like")
  role     UserRole  @default(USER)
  imageUrl String?
  bio      String?
}

model Post {
  postId   String    @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  content  String
  createAt DateTime  @default(now())
  updateAt DateTime  @updatedAt
  user     User      @relation("user_post", fields: [userId], references: [id])
  userId   String    @db.ObjectId
  Comment  Comment[] @relation("post_comment")
  Like     Like[]    @relation("post_like")
  imageUrl String?
}

model Comment {
  commentId String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  createAt  DateTime @default(now())
  updateAt  DateTime @updatedAt
  postId    String   @db.ObjectId
  user      User     @relation("user_comment", fields: [userId], references: [id])
  post      Post     @relation("post_comment", fields: [postId], references: [postId])
  userId    String   @db.ObjectId
}

model Like {
  likeId String @id @default(auto()) @map("_id") @db.ObjectId
  user   User   @relation("user_like", fields: [userId], references: [id])
  userId String @db.ObjectId
  postId String @db.ObjectId
  Post   Post   @relation("post_like", fields: [postId], references: [postId])
}
